// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using proj_back.Models;

namespace proj_back.Data
{
    public partial class GradprojdataContext : DbContext
    {
        public GradprojdataContext()
        {
        }

        public GradprojdataContext(DbContextOptions<GradprojdataContext> options)
            : base(options)
        {
        }

        public virtual DbSet<CharityEventsTable> CharityEventsTables { get; set; }
        public virtual DbSet<Story> Stories { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<CharityEventsTable>(entity =>
            {
                entity.HasKey(e => e.EventId);

                entity.ToTable("charity_events_table");

                entity.Property(e => e.EventId).HasColumnName("event_id");

                entity.Property(e => e.EventDate)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("event_date");

                entity.Property(e => e.EventDescription)
                    .IsRequired()
                    .HasMaxLength(500)
                    .HasColumnName("event_description");

                entity.Property(e => e.EventEndTime)
                    .IsRequired()
                    .HasMaxLength(5)
                    .HasColumnName("event-end_time")
                    .IsFixedLength();

                entity.Property(e => e.EventFee)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("event_fee");

                entity.Property(e => e.EventLocation)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("event_location");

                entity.Property(e => e.EventName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("event_name");

                entity.Property(e => e.EventStartTime)
                    .IsRequired()
                    .HasMaxLength(5)
                    .HasColumnName("event_start_time")
                    .IsFixedLength();
            });

            modelBuilder.Entity<Story>(entity =>
            {
                entity.ToTable("stories");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("name");

                entity.Property(e => e.story)
                    .IsRequired()
                    .HasColumnName("story");

                entity.Property(e => e.Surname)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("surname");

                entity.Property(e => e.Title)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("title");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}